pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1
        kind: Pod
        spec:
          containers:
          - name: maven
            image: abhishekf5/maven-abhishek-docker-agent:v1
            command:
            - cat
            tty: true
          - name: docker
            image: docker:latest
            command:
            - cat
            tty: true
            volumeMounts:
             - mountPath: /var/run/docker.sock
               name: docker-sock
          volumes:
          - name: docker-sock
            hostPath:
              path: /var/run/docker.sock    
        '''
    }
  }
  stages {
    stage('Clone') {
      steps {
        container('maven') {
          // git branch: 'main', changelog: false, poll: false, url: 'https://https://github.com/Mohan1607/Jenkins-Zero-To-Hero.git'
         git branch: 'main', url: 'https://github.com/Mohan1607/Jenkins-Zero-To-Hero.git'
        }
      }
    }  
    stage('Build-Jar-file') {
      steps {
        container('maven') {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
          //sh 'mvn package'
        }
      }
    }
    stage('Build-Docker-Image') {
      environment {
        DOCKER_IMAGE = "mohan1607/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        container('docker') {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && docker build -t ${DOCKER_IMAGE} .'
        }
      }
    }
    stage('Login-Into-Docker') {
      environment {
        DOCKER_USER ="mohan1607"
      }
      steps {
      withCredentials([string(credentialsId: 'docker', variable: 'DOCKER_PASSWD')]) {
        container('docker') {
          sh 'docker login -u ${DOCKER_USER} -p ${DOCKER_PASSWD}'
      }
    }
    }
    }
     stage('Push-Images-Docker-to-DockerHub') {
     environment {
        DOCKER_IMAGE = "mohan1607/ultimate-cicd:${BUILD_NUMBER}"
      }
      steps {
        container('docker') {
          sh 'docker push ${DOCKER_IMAGE}'
      }
    }
     }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "JavaApp-CD"
            GIT_USER_NAME = "Mohan1607"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git clone "https://github.com/Mohan1607/JavaApp-CD.git"
                    cd JavaApp-CD
                    git config user.email "venkyravipati99@gmail.com"
                    git config user.name "Mohan Venkatesh"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    ls -l
                    sed -i 's|image:mohan1607/ultimate-cicd:.*|image: mohan1607/ultimate-cicd:'${BUILD_NUMBER}'|' spring-boot-app-manifests/deployment.yaml
                    echo "updated yaml file"
                    cat spring-boot-app-manifests/deployment.yaml 
                    git add spring-boot-app-manifests/deployment.yaml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    # git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }

  }
}
